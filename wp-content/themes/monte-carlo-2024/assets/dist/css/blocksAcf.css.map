{"version":3,"file":"css/blocksAcf.css","mappings":"AAAA;EACE,WAAW;EACX,WAAW;EACX,uBAAuB;EACvB,kBAAkB;EAClB,YAAY;EACZ,aAAa;EACb,oBAAoB;AACtB;;;ACJA;ECHE;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;ACEF;;AFHA;ECUE;ACHF;;AFHA;ECUE;ACHF;;AFHA;ECUE;ACHF;;AFHA;EC2BI;EACA;EACA;EACA;EACA,eE3CK;ADuBT;;AFPA;ECME;ACKF;;AFPA;EACE;AEUF;;AFPA;EACE;AEUF;;AFPA;EACE;AEUF;;AFPA;EACE;AEUF;;AFPA;EACE;AEUF;;AFPA;EACE;AEUF;;AFPA;EACI;AEUJ;;AFLE;EACE;EACA;EACA;EACA;EACA,eGvDK;AD+DT;;AFLI;EACE;EACA;EACA;EACA,eG9DG;ADsET;;AFNI;EACE;AESN;;AFhBI;EACE;EACA;EACA;EACA,eG9DG;ADiFT;;AFjBI;EACE;AEoBN;;AF3BI;EACE;EACA;EACA;EACA,eG9DG;AD4FT;;AF5BI;EACE;AE+BN;;AFtCI;EACE;EACA;EACA;EACA,eG9DG;ADuGT;;AFvCI;EACE;AE0CN;;AFjDI;EACE;EACA;EACA;EACA,eG9DG;ADkHT;;AFlDI;EACE;AEqDN;;AF5DI;EACE;EACA;EACA;EACA,eG9DG;AD6HT;;AF7DI;EACE;AEgEN;;AFvEI;EACE;EACA;EACA;EACA,eG9DG;ADwIT;;AFxEI;EACE;AE2EN;;AFlFI;EACE;EACA;EACA;EACA,eG9DG;ADmJT;;AFnFI;EACE;AEsFN;;AF7FI;EACE;EACA;EACA;EACA,eG9DG;AD8JT;;AF9FI;EACE;AEiGN;;AFxGI;EACE;EACA;EACA;EACA,eG9DG;ADyKT;;AFzGI;EACE;AE4GN;;AFnHI;EACE;EACA;EACA;EACA,eG9DG;ADoLT;;AFpHI;EACE;AEuHN;;AF9HI;EACE;EACA;EACA;EACA,eG9DG;AD+LT;;AF/HI;EACE;AEkIN;;AF/HE;EACE;AEkIJ;;AFhIE;EACE;AEmIJ;;AFjIE;EACE;AEoIJ;;AFlIE;EACE;AEqIJ;;AFnIE;EACE;AEsIJ;;AFpIE;EACE;AEuIJ;;AFrIE;EACE;AEwIJ;;AFtIE;EACE;AEyIJ;;AFvIE;EACE;AE0IJ;;AFxIE;EACE;AE2IJ;;AFlII;EAvDF;IACE;IACA;IACA;IACA;IACA,eGvDK;EDoPP;EF1LE;IACE;IACA;IACA;IACA,eG9DG;ED0PP;EF1LE;IACE;EE4LJ;EFnME;IACE;IACA;IACA;IACA,eG9DG;EDmQP;EFnME;IACE;EEqMJ;EF5ME;IACE;IACA;IACA;IACA,eG9DG;ED4QP;EF5ME;IACE;EE8MJ;EFrNE;IACE;IACA;IACA;IACA,eG9DG;EDqRP;EFrNE;IACE;EEuNJ;EF9NE;IACE;IACA;IACA;IACA,eG9DG;ED8RP;EF9NE;IACE;EEgOJ;EFvOE;IACE;IACA;IACA;IACA,eG9DG;EDuSP;EFvOE;IACE;EEyOJ;EFhPE;IACE;IACA;IACA;IACA,eG9DG;EDgTP;EFhPE;IACE;EEkPJ;EFzPE;IACE;IACA;IACA;IACA,eG9DG;EDyTP;EFzPE;IACE;EE2PJ;EFlQE;IACE;IACA;IACA;IACA,eG9DG;EDkUP;EFlQE;IACE;EEoQJ;EF3QE;IACE;IACA;IACA;IACA,eG9DG;ED2UP;EF3QE;IACE;EE6QJ;EFpRE;IACE;IACA;IACA;IACA,eG9DG;EDoVP;EFpRE;IACE;EEsRJ;EF7RE;IACE;IACA;IACA;IACA,eG9DG;ED6VP;EF7RE;IACE;EE+RJ;EF5RA;IACE;EE8RF;EF5RA;IACE;EE8RF;EF5RA;IACE;EE8RF;EF5RA;IACE;EE8RF;EF5RA;IACE;EE8RF;EF5RA;IACE;EE8RF;EF5RA;IACE;EE8RF;EF5RA;IACE;EE8RF;EF5RA;IACE;EE8RF;EF5RA;IACE;EE8RF;AACF;AFlRI;EA3DF;IACE;IACA;IACA;IACA;IACA,eGvDK;EDuYP;EF7UE;IACE;IACA;IACA;IACA,eG9DG;ED6YP;EF7UE;IACE;EE+UJ;EFtVE;IACE;IACA;IACA;IACA,eG9DG;EDsZP;EFtVE;IACE;EEwVJ;EF/VE;IACE;IACA;IACA;IACA,eG9DG;ED+ZP;EF/VE;IACE;EEiWJ;EFxWE;IACE;IACA;IACA;IACA,eG9DG;EDwaP;EFxWE;IACE;EE0WJ;EFjXE;IACE;IACA;IACA;IACA,eG9DG;EDibP;EFjXE;IACE;EEmXJ;EF1XE;IACE;IACA;IACA;IACA,eG9DG;ED0bP;EF1XE;IACE;EE4XJ;EFnYE;IACE;IACA;IACA;IACA,eG9DG;EDmcP;EFnYE;IACE;EEqYJ;EF5YE;IACE;IACA;IACA;IACA,eG9DG;ED4cP;EF5YE;IACE;EE8YJ;EFrZE;IACE;IACA;IACA;IACA,eG9DG;EDqdP;EFrZE;IACE;EEuZJ;EF9ZE;IACE;IACA;IACA;IACA,eG9DG;ED8dP;EF9ZE;IACE;EEgaJ;EFvaE;IACE;IACA;IACA;IACA,eG9DG;EDueP;EFvaE;IACE;EEyaJ;EFhbE;IACE;IACA;IACA;IACA,eG9DG;EDgfP;EFhbE;IACE;EEkbJ;EF/aA;IACE;EEibF;EF/aA;IACE;EEibF;EF/aA;IACE;EEibF;EF/aA;IACE;EEibF;EF/aA;IACE;EEibF;EF/aA;IACE;EEibF;EF/aA;IACE;EEibF;EF/aA;IACE;EEibF;EF/aA;IACE;EEibF;EF/aA;IACE;EEibF;AACF;AFjaI;EA/DF;IACE;IACA;IACA;IACA;IACA,eGvDK;ED0hBP;EFheE;IACE;IACA;IACA;IACA,eG9DG;EDgiBP;EFheE;IACE;EEkeJ;EFzeE;IACE;IACA;IACA;IACA,eG9DG;EDyiBP;EFzeE;IACE;EE2eJ;EFlfE;IACE;IACA;IACA;IACA,eG9DG;EDkjBP;EFlfE;IACE;EEofJ;EF3fE;IACE;IACA;IACA;IACA,eG9DG;ED2jBP;EF3fE;IACE;EE6fJ;EFpgBE;IACE;IACA;IACA;IACA,eG9DG;EDokBP;EFpgBE;IACE;EEsgBJ;EF7gBE;IACE;IACA;IACA;IACA,eG9DG;ED6kBP;EF7gBE;IACE;EE+gBJ;EFthBE;IACE;IACA;IACA;IACA,eG9DG;EDslBP;EFthBE;IACE;EEwhBJ;EF/hBE;IACE;IACA;IACA;IACA,eG9DG;ED+lBP;EF/hBE;IACE;EEiiBJ;EFxiBE;IACE;IACA;IACA;IACA,eG9DG;EDwmBP;EFxiBE;IACE;EE0iBJ;EFjjBE;IACE;IACA;IACA;IACA,eG9DG;EDinBP;EFjjBE;IACE;EEmjBJ;EF1jBE;IACE;IACA;IACA;IACA,eG9DG;ED0nBP;EF1jBE;IACE;EE4jBJ;EFnkBE;IACE;IACA;IACA;IACA,eG9DG;EDmoBP;EFnkBE;IACE;EEqkBJ;EFlkBA;IACE;EEokBF;EFlkBA;IACE;EEokBF;EFlkBA;IACE;EEokBF;EFlkBA;IACE;EEokBF;EFlkBA;IACE;EEokBF;EFlkBA;IACE;EEokBF;EFlkBA;IACE;EEokBF;EFlkBA;IACE;EEokBF;EFlkBA;IACE;EEokBF;EFlkBA;IACE;EEokBF;AACF;AFhjBI;EAnEF;IACE;IACA;IACA;IACA;IACA,eGvDK;ED6qBP;EFnnBE;IACE;IACA;IACA;IACA,eG9DG;EDmrBP;EFnnBE;IACE;EEqnBJ;EF5nBE;IACE;IACA;IACA;IACA,eG9DG;ED4rBP;EF5nBE;IACE;EE8nBJ;EFroBE;IACE;IACA;IACA;IACA,eG9DG;EDqsBP;EFroBE;IACE;EEuoBJ;EF9oBE;IACE;IACA;IACA;IACA,eG9DG;ED8sBP;EF9oBE;IACE;EEgpBJ;EFvpBE;IACE;IACA;IACA;IACA,eG9DG;EDutBP;EFvpBE;IACE;EEypBJ;EFhqBE;IACE;IACA;IACA;IACA,eG9DG;EDguBP;EFhqBE;IACE;EEkqBJ;EFzqBE;IACE;IACA;IACA;IACA,eG9DG;EDyuBP;EFzqBE;IACE;EE2qBJ;EFlrBE;IACE;IACA;IACA;IACA,eG9DG;EDkvBP;EFlrBE;IACE;EEorBJ;EF3rBE;IACE;IACA;IACA;IACA,eG9DG;ED2vBP;EF3rBE;IACE;EE6rBJ;EFpsBE;IACE;IACA;IACA;IACA,eG9DG;EDowBP;EFpsBE;IACE;EEssBJ;EF7sBE;IACE;IACA;IACA;IACA,eG9DG;ED6wBP;EF7sBE;IACE;EE+sBJ;EFttBE;IACE;IACA;IACA;IACA,eG9DG;EDsxBP;EFttBE;IACE;EEwtBJ;EFrtBA;IACE;EEutBF;EFrtBA;IACE;EEutBF;EFrtBA;IACE;EEutBF;EFrtBA;IACE;EEutBF;EFrtBA;IACE;EEutBF;EFrtBA;IACE;EEutBF;EFrtBA;IACE;EEutBF;EFrtBA;IACE;EEutBF;EFrtBA;IACE;EEutBF;EFrtBA;IACE;EEutBF;AACF;AF7rBA;EACI;AE+rBJ;;AF5rBA;EACI;AE+rBJ;;AEt0BA;EACE;AFy0BF;;AEt0BA;EACE;EACA;EACA;AFy0BF;;AEt0BA;EACE;AFy0BF;;AEp0BE;EACE;AFu0BJ;;AEr0BE;EACE;EACA;EACA;AFw0BJ;;AEt0BE;EACE;AFy0BJ;;AEh0BI;EAlBF;IACE;EFs1BF;EEp1BA;IACE;IACA;IACA;EFs1BF;EEp1BA;IACE;EFs1BF;AACF;AE10BI;EAtBF;IACE;EFm2BF;EEj2BA;IACE;IACA;IACA;EFm2BF;EEj2BA;IACE;EFm2BF;AACF;AEn1BI;EA1BF;IACE;EFg3BF;EE92BA;IACE;IACA;IACA;EFg3BF;EE92BA;IACE;EFg3BF;AACF;AE51BI;EA9BF;IACE;EF63BF;EE33BA;IACE;IACA;IACA;EF63BF;EE33BA;IACE;EF63BF;AACF;AEr2BI;EAlCF;IACE;EF04BF;EEx4BA;IACE;IACA;IACA;EF04BF;EEx4BA;IACE;EF04BF;AACF;AE92BI;EAtCF;IACE;EFu5BF;EEr5BA;IACE;IACA;IACA;EFu5BF;EEr5BA;IACE;EFu5BF;AACF;AEv3BI;EA1CF;IACE;EFo6BF;EEl6BA;IACE;IACA;IACA;EFo6BF;EEl6BA;IACE;EFo6BF;AACF;AEh4BI;EA9CF;IACE;EFi7BF;EE/6BA;IACE;IACA;IACA;EFi7BF;EE/6BA;IACE;EFi7BF;AACF;AGz7BA;EACE;EACA;EACA;EACA;AH27BF;AGv7BA;EACE;EACA;EACA;EACA;AHy7BF;AGz6BA;;0CAAA;AA2CA;;0CAAA;AAsDA;;0CAAA;AAkCA;;0CAAA;AAQA;;0CAAA;AC1LA;EACE;EACA,cD0DgB;ECzDhB,uCD0JI;ECzJJ,0CDyJI;AHg1BN;AIx+BE;EACE;EACA;EACA;AJ0+BJ;AIv+BE;EACE,cDgDc;EC/Cd,yCDyIE;ECxIF;AJy+BJ;AIt+BE;EACE;AJw+BJ;AIr+BE;EACE;EACA;EACA;EACA;EACA;EACA;EACA;AJu+BJ;AIt+BI;EARF;IASI;EJy+BJ;AACF;AIx+BI;EACE;EACA;EACA;EACA;AJ0+BN;AIt+BE;EACE;EACA;EACA;AJw+BJ;AIv+BI;EAJF;IAKI;EJ0+BJ;AACF;AIz+BI;EAPF;IAQI;EJ4+BJ;AACF;AIz+BE;EACE;EACA;EACA;EACA,sCDgGE;AH24BN;AI1+BI;EACE;EACA;EACA;AJ4+BN;AI1+BI;EAVF;IAWI;IACA;IACA;EJ6+BJ;AACF;AI5+BI;EACE;EACA;EACA;EACA;EACA;EACA;EACA;AJ8+BN;AI7+BM;EARF;IASI;IACA;EJg/BN;EI/+BM;IACE;IACA;EJi/BR;AACF;AI5+BE;EACE;AJ8+BJ;AI7+BI;EAFF;IAGI;EJg/BJ;AACF;AI7+BE;EACE;EACA;AJ++BJ;AI9+BI;EAHF;IAII;EJi/BJ;AACF;AIh/BI;EACE,yCDiDA;AHi8BN;AIj/BM;EAFF;IAGI;EJo/BN;EIl/BQ;IACE;EJo/BV;AACF;AIj/BM;EACE;AJm/BR;AIl/BQ;EACE;AJo/BV;AIj/BM;EACE;EACA;EACA;EACA;EACA,yCD6BF;AHs9BN;AIl/BQ;EANF;IAOI;EJq/BR;AACF;AIp/BQ;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AJs/BV;AIr/BU;EATF;IAUI;IACA;EJw/BV;AACF;AIr/BM;EACE;AJu/BR;AIt/BQ;EACE;AJw/BV;AIr/BU;EADF;IAEI;EJw/BV;AACF;AIj/BE;EACE,qCD/CC;ECgDD,yCDHE;ECIF;AJm/BJ;AIl/BI;EAJF;IAKI;IACA;IACA,uCDbD;EHkgCH;AACF;AIn/BM;EADF;IAEI;EJs/BN;AACF;AIp/BI;EACI,oCDrBH;AH2gCL;AIp/BI;EACE;EACA,yCDxBA;AH8gCN;AIp/BI;EACE,oCD5BD;EC6BC,yCD5BA;AHkhCN;AIj/BI;EADF;IAEI;EJo/BJ;AACF;AIl/BM;EADF;IAEI;IACA;EJq/BN;AACF;;AKlrCA;EACE,uCF4JI;EE3JJ,0CF2JI;AH0hCN;AKnrCI;EACE;EACA,yCFmJA;AHkiCN;AKhrCQ;EACE;ALkrCV;AK/qCQ;EACE;EACA;EACA;EACA;EACA;EACA;ALirCV;AK/qCY;EARJ;IASM;ELkrCZ;AACF;AKhrCY;EACE;EFgMZ;AHm/BF;AGj/BI;EARF;EACA;EACA,oBE3LgC;ALurClC;AGl/BI;EACE;EACA;EACA;EACA;EACA;AHo/BN;AK5rCgB;EAJJ;IAKM;EL+rChB;AACF;AK7rCgB;EACE;AL+rClB;AKtrCI;EACE;EACA;EACA;ALwrCN;AKtrCQ;EALJ;IAMM;ELyrCR;AACF;AKrrCY;EAFJ;IAGM;IACA;ELwrCZ;AACF;AKlrCI;EACE;EACA;EACA;EACA;ALorCN;AKlrCQ;EACE,mCFmFJ;AHimCN;AKjrCQ;EACE,yCF0EJ;AHymCN;AKhrCQ;EACE,qCF6BL;EE5BK,yCFoEJ;AH8mCN;AK/qCQ;EACE;ALirCV;AK/qCY;EACE;ALirCd;AKxqCQ;EACE,yCFqDJ;AHqnCN;AKvqCQ;EACE,4BF3DE;EE4DF,sCFLL;EEMK;EACA,yCFgDJ;AHynCN;AKpqCY;EACE;ALsqCd;AKjqCQ;EACE,sCFiCJ;AHkoCN;;AMxxCA;EACE,cH2DgB;EG1DhB,uCH2JI;EG1JJ,0CH0JI;AHioCN;AM1xCE;EACE;EACA,yCHiJE;AH2oCN;AMzxCI;EACE;AN2xCN;AMzxCQ;EAHJ;IAKM;EN2xCR;AACF;AM1xCQ;EAPJ;IASM;EN4xCR;AACF;AM3xCQ;EAXJ;IAaM;EN6xCR;AACF;AM1xCI;EACE;EACA;AN4xCN;AM1xCQ;EAJJ;IAKM;EN6xCR;AACF;AMzxCE;EACE,sCHoHE;AHuqCN;AMxxCM;EACE;EACA;AN0xCR;AMtxCE;EACE,yCHwGE;AHgrCN;AMtxCE;EACE;ANwxCJ;AMtxCE;EACE,sCHiGE;AHurCN;AMtxCE;EACE;EACA,sCHkGE;AHsrCN;;AOj1CA;EACE;EACA;APo1CF;AOl1CI;EACE;EACA;EACA;EACA;APo1CN;AOz0CI;EACE;AP20CN;AO10CM;EACE;AP40CR;AOx0CI;EACE,sCJ2HA;AH+sCN;AOx0CQ;EACE,yCJyHJ;AHitCN;AOx0CY;EACE;AP00Cd;AOn0CI;EACE;APq0CN;AOn0CQ;EAHJ;IAIM;EPs0CR;AACF;AOp0CQ;EJ6KN;AH0pCF;AGxpCI;EARF;EACA;EACA,oBIxK4B;AP20C9B;AGzpCI;EACE;EACA;EACA;EACA;EACA;AH2pCN;AOh1CY;EACE;APk1Cd;AO70CQ;EJoKN;AH4qCF;AG1qCI;EARF;EACA;EACA,0BI/J4B;APo1C9B;AG3qCI;EACE;EACA;EACA;EACA;EACA;AH6qCN;AOz1CY;EACE;AP21Cd;AOt1CQ;EJ2JN;AH8rCF;AG5rCI;EARF;EACA;EACA,sBItJ4B;AP61C9B;AG7rCI;EACE;EACA;EACA;EACA;EACA;AH+rCN;AOl2CY;EACE;APo2Cd;AO71CI;EACE,sCJ4EA;AHmxCN;AO71CQ;EACE;EACA;AP+1CV;AO71CY;EACE;AP+1Cd;AO51CY;EACE;EACA;AP81Cd;AO31CY;EACE;EACA;EACA;EACA,mBJ7BR;EI8BQ;EACA;AP61Cd;AO31CgB;EACE;EACA;EACA;EACA;AP61ClB;AO31CoB;EANJ;IAOM;EP81CpB;AACF;AOx1CY;EACE;EACA;EACA;EACA;EACA;EACA;AP01Cd;AOx1CgB;EACE;EACA;EACA;EACA;AP01ClB;AOx1CoB;EANJ;IAOM;IACA,qCJpBjB;EH+2CH;AACF;AOj1CI;EACE;EACA;APm1CN;AOj1CQ;EAJJ;IAKM;EPo1CR;AACF;AOh1CY;EAFJ;IAGM;IACA;IACA;EPm1CZ;AACF;AO/0CQ;EACE;APi1CV;AO10CM;EACE;IACE;EP40CR;AACF;;AQt/CA;EACE,uCL4JI;EK3JJ,0CL2JI;AH81CN;AQv/CI;EACE;EACA;ARy/CN;AQt/CI;EACE;EACA;EACA,sCL6IA;AH22CN;AQt/CQ;EACE;EACA;EACA;ARw/CV;AQr/CQ;EACE;EACA;EACA;EACA;EACA;ARu/CV;;AShhDA;EACE;ATmhDF;AS9gDE;EANF;IAOI,uCNoJE;IMnJF,0CNmJE;IMlJF,wCN0JG;IMzJH,yCNyJG;EHw3CL;AACF;AShhDE;EACE,cN+Cc;AHm+ClB;AShhDM;EACE;ATkhDR;AShhDU;EACE,mBNsCJ;AH4+CR;AS/gDU;EACE;IACE;IACA;ETihDZ;ES/gDY;IACE,mBN8BA;IM7BA;ETihDd;AACF;ASzgDE;EACE;AT2gDJ;ASxgDE;EACE;EACA;AT0gDJ;ASxgDM;EAJJ;IAKM;IACA;IACA;ET2gDN;AACF;ASrgDI;EAFF;IAGI,wCNoGA;IMnGA,yCNmGA;EHq6CJ;AACF;ASpgDM;EAFF;IAGI;ETugDN;AACF;ASngDI;EACE;EACA;EACA,wCNmFA;EMlFA,yCN6EA;EAsEJ;AHm3CF;AGj3CI;EARF;EACA;EACA,oBM9IwB;AT0gD1B;AGl3CI;EACE;EACA;EACA;EACA;EACA;AHo3CN;AShhDM;EANF;IAOI;ETmhDN;AACF;AS7gDI;EACE;AT+gDN;AS7gDI;EACE,sCN+DA;AHg9CN;AS3gDE;EACE,sCN6DE;AHg9CN;AS5gDI;EAFF;IAGI;IACA;IACA;IACA,uCN0DA;IMzDA;ET+gDJ;AACF;;AUlnDA;EACE,uCP4JI;EO3JJ,0CP2JI;AH09CN;AUnnDE;EXHA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EA+IE;EWjJA;EACA,yCPoJE;AHw+CN;AU1nDM;EACE;AV4nDR;AUznDM;EACE,sCPwIF;AHm/CN;AUznDU;EACE;EACA,yCPoIN;AHu/CN;AUxnDU;EACE;AV0nDZ;AUjnDM;EACE;EACA,+BPyHF;AH0/CN;AUjnDU;EAEI;IACE;IACA;EVknDd;AACF;AU9mDU;EAbJ;IAcM;EVinDV;EU/mDY;IPkMb;IACA;EHg7CC;EG96CD;IACC;EHg7CA;EG96CA;IACC;EHg7CD;AACF;AUpnDU;EAtBJ;IAuBM;IACA;IACA;EVunDV;EUrnDY;IACE;IACA;IACA;EVunDd;AACF;AUnnDU;EACE;AVqnDZ;AUhnDc;EACE;EACA,4BPhCJ;EOiCI,gBP8BL;EO7BK;AVknDhB;AU3mDM;EACE;EACA,+BPqEF;AHwiDN;AU3mDU;EAJJ;IAKM;IACA;IACA,mCPiEN;EH6iDJ;EU5mDY;IPqJb;IACA;EH09CC;EGx9CD;IACC;EH09CA;EGx9CA;IACC;EH09CD;EUlnDY;IACE;EVonDd;AACF;AUpmDU;EAFJ;IAGM;EVumDV;AACF;AUrmDU;EANJ;IAOM;IACA;EVwmDV;AACF;AUpmDM;EACE;AVsmDR;AUlmDc;EACE;EACA;EACA;EACA;EACA;AVomDhB;AUjmDc;EPiFZ;AHmhDF;AGjhDI;EARF;EACA;EACA,sBO5EkC;AVwmDpC;AGlhDI;EACE;EACA;EACA;EACA;EACA;AHohDN;AU5mDc;EP6EZ;AHkiDF;AGhiDI;EARF;EACA;EACA,4BOxEkC;AVmnDpC;AGjiDI;EACE;EACA;EACA;EACA;EACA;AHmiDN;AUvnDc;EPyEZ;AHijDF;AG/iDI;EARF;EACA;EACA,oBOpEkC;AV8nDpC;AGhjDI;EACE;EACA;EACA;EACA;EACA;AHkjDN;AU9nDsB;EACE;AVgoDxB;AUvnDU;EACE,sCPhBN;AHyoDN;AUvnDc;EACE,yCPpBV;AH6oDN;AUpnDgB;EACE,qCPlEb;EOmEa;EACA,yCP3BZ;AHipDN;AUpnDoB;EACE;AVsnDtB;AUnnDoB;EACE,qCP1FjB;AH+sDL;AUlnDoB;EACE,qCP7FjB;AHitDL;AUjnDoB;EACE,sCPhGjB;AHmtDL;AUhnDoB;EACE,qCPnGjB;AHqtDL;AU/mDoB;EACE,sCPtGjB;AHutDL;AU5mDgB;EACE;AV8mDlB;AUzmDc;EACE,sCP9DV;AHyqDN;AUlmDE;EACE,sCPjEE;AHqqDN;;AWl0DA;EACE;EACA;AXq0DF;AWn0DI;EAJJ;IAKM;IACA;EXs0DJ;AACF;AWp0DI;EATJ;IAUM;IACA;EXu0DJ;AACF;;AWn0DA;EACE;EACA,0CR2II;AH2rDN;AWp0DI;EACE,mCRsIA;AHgsDN;AWh0DI;EACE;AXk0DN;AWj0DM;EACE;AXm0DR;AW7zDQ;EACE,sCRiHJ;AH8sDN;AW5zDQ;EACE;EACA;EACA,oCR+GJ;AH+sDN;AWrzDY;EACE;AXuzDd;AWnzDoB;EACE,qCRkDjB;EQjDiB;EACA,4BRjBV;AHs0DZ;AWhzDgB;EACE;EACA,oCRiFb;AHiuDL;AW7yDoB;EACE;EACA,mCR9BX;EQ+BW;AX+yDtB;AWxyDY;EACE,yCRmER;AHuuDN;AW/xDoB;EACE,qCRajB;AHoxDL;AW1xDY;EACE,yCR+CR;AH6uDN;AWzxDY;EACE;EACA;EACA;AX2xDd;AWzxDgB;EACE;EACA;AX2xDlB;AWxxDgB;EACE;EACA,oCR8Bb;AH4vDL;;AYh5DA;EACE,uCT4JI;ES3JJ,0CT2JI;AHwvDN;AYj5DI;EACE;AZm5DN;AY94DQ;EACE;EACA;EACA;EACA;EACA;AZg5DV;AY94DY;EACE;EACA;EACA;EACA;EACA;AZg5Dd;AY94DgB;EACE;EACA;EACA;EACA;EACA;EACA;EACA;AZg5DlB;AY94DoB;EATJ;IAUM;IACA;IACA;EZi5DpB;AACF;AY/4DoB;EAfJ;IAgBM;IACA;IACA;EZk5DpB;AACF;AYh5DoB;EACE;EACA;EACA;AZk5DtB;AY/4DoB;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AZi5DtB;AY94DoB;EACE;EACA;EACA;EACA;AZg5DtB;AYr4DY;EACE;EACA;EACA;EACA;EACA;AZu4Dd;AYr4DgB;EACE;EACA;EACA;EACA;EACA;EACA;AZu4DlB;AYr4DoB;EARJ;IASM;IACA;EZw4DpB;AACF;AYt4DoB;EACE;EACA;EACA;AZw4DtB;AYr4DoB;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AZu4DtB;AYp4DoB;EACE;EACA;EACA;EACA;AZs4DtB;AY33DU;EACE;AZ63DZ;AYt3DI;EACE,sCTkBA;ESjBA;AZw3DN;;AangEA;EACE,uCV4JI;EU3JJ,0CV2JI;AH22DN;AapgEI;EACE,yCVoJA;AHk3DN;AapgEQ;EAHJ;IAIM;EbugER;AACF;AargEQ;EACE;EACA;EACA;EACA;EACA;AbugEV;AalgEI;EACE;EACA;EACA;EACA;EACA;AbogEN;AalgEQ;EAPJ;IAQM;EbqgER;AACF;AangEQ;EACE;AbqgEV;AahgEI;EACE;EACA,yCV8GA;AHo5DN;Aa//DI;EACE,yCV6GA;AHo5DN;Aa//DQ;EAHJ;IAIM;EbkgER;AACF;AahgEQ;EACE,yCVoGJ;AH85DN;Aa//DQ;EACE,qCVsDL;EUrDK;AbigEV;Aa9/DQ;EACE;EACA;EACA;EACA;EACA;AbggEV;Aa9/DY;EAPJ;IAQM;EbigEZ;AACF;Aa//DY;EAXJ;IAYM;EbkgEZ;AACF;AahgEY;EAfJ;IAgBM;EbmgEZ;AACF;Aa7/DU;EACE;Ab+/DZ;Aa7/Dc;EACE;EACA;EACA;Ab+/DhB;Aat/DU;EACE,qCVcP;AH0+DL;Aan/DQ;EACE;Abq/DV;Aah/DI;EACE,sCV2CA;AHu8DN;;AchmEA;EACE,uCX4JI;EW3JJ,0CX2JI;AHw8DN;AcjmEI;EACE,sCXwJA;EWvJA,yCXuJA;AH48DN;AcjmEQ;EACE;AdmmEV;Ac9lEI;EACE,yCX4IA;AHo9DN;Ac9lEQ;EACE;AdgmEV;Ac3lEI;EXqMF;EWnMI,yCX8HA;AH+9DN;AGx5DI;EARF;EACA;EACA,oBWhMwB;AdmmE1B;AGz5DI;EACE;EACA;EACA;EACA;EACA;AH25DN;ActmEI;EACE,4BXcM;EWbN;AdwmEN;AcnmEQ;EACE;AdqmEV;Ac9lEQ;EACE,0CXoHH;AH4+DP;Ac7lEQ;EACE;EACA;EACA;EACA,mCXoGJ;AH2/DN;Ac7lEY;EANJ;IAOM;IACA;EdgmEZ;AACF;Ac9lEY;EACE;AdgmEd;Ac9lEgB;EAHJ;IAIM;IACA;EdimEhB;AACF;AczlEU;EACE,yCX8EN;EW7EM;Ad2lEZ;AczlEc;EACE;Ad2lEhB;AcplEQ;EACE,yCXoEJ;AHkhEN;AcnlEQ;EACE,sCX8DJ;AHuhEN;Ac9kEQ;EACE,mCX2DJ;AHqhEN;Ac7kEQ;EACE;EACA;EACA,yCXiDJ;AH8hEN;Ac7kEY;EALJ;IAMM;EdglEZ;AACF;Ac9kEY;EACE;AdglEd;Ac3kEQ;EACE;EACA;EACA;Ad6kEV;Ac1kEQ;EACE,yCX8BJ;AH8iEN;AczkEQ;EACE,sCXyBJ;AHkjEN;ActkEI;EACE,sCXyBA;AH+iEN;ActkEQ;EACE,cX3EQ;EW4ER;AdwkEV;ActkEY;EACE;IACE;EdwkEd;AACF;;Ae5sEA;EACC;IAAK;EfgtEJ;Ee/sED;IAAO;EfktEN;AACF;Ae9sEA;EACC;EACA;EACA;EACA;EACA;EACA;AfgtED;Ae9sEC;EAvBA;EA0BC;EACA,aAvBO;EAwBP;EACA;EACA;Af+sEF;Ae5sEC;EACC;EACA;EACA;Af8sEF;Ae3sEC;EACC;EACA;Af6sEF;Ae1sEC;EACC;EACA;EACA;Af4sEF;AezsEC;EACC,aA/CO;EAgDL,YA/CI;Af0vER;Ae1sEI;EACE,aAlDG;EAmDH;Af4sEN;;AAhvEA;EACE;AAmvEF;AAjvEI;EACE;EACA;EACA;EACA;AAmvEN,C","sources":["webpack://TBStarter/template-parts/blocks/mc-logos/style.css","webpack://TBStarter/assets/scss/grid/_grid.scss","webpack://TBStarter/assets/scss/grid/mixins/_grid-mixins.scss","webpack://TBStarter/assets/scss/blocks-acf.scss","webpack://TBStarter/assets/scss/grid/variables/_grid-variables.scss","webpack://TBStarter/assets/scss/grid/_visibility.scss","webpack://TBStarter/assets/scss/partials/_variables.scss","webpack://TBStarter/assets/scss/blocks/_carousel.scss","webpack://TBStarter/assets/scss/blocks/_case-study.scss","webpack://TBStarter/assets/scss/blocks/_headline.scss","webpack://TBStarter/assets/scss/blocks/_hero.scss","webpack://TBStarter/assets/scss/blocks/_video-embed.scss","webpack://TBStarter/assets/scss/components/_banner.scss","webpack://TBStarter/assets/scss/components/_columns-layout.scss","webpack://TBStarter/assets/scss/components/_form-hero.scss","webpack://TBStarter/assets/scss/components/_logo-grid.scss","webpack://TBStarter/assets/scss/components/_media-text.scss","webpack://TBStarter/assets/scss/components/_testimonials.scss","webpack://TBStarter/assets/scss/components/_mc-infinite-carousel.scss"],"sourcesContent":[".mc-logos:after {\n  content: \"\";\n  width: 100%;\n  background-color: white;\n  position: absolute;\n  height: 30px;\n  bottom: -40px;\n  padding-bottom: 60px;\n}\n","// Creds to https://github.com/kristoferjoseph/flexboxgrid\n// No gutters\n// No text alignment with justified container classes (center-xs, for example)\n\n.row {\n  @include row();\n}\n\n.row.reverse {\n  @include row-reverse();\n}\n\n.row.natural-height {\n  @include row-natural-height();\n}\n\n.row.flex-column {\n  @include row-flex-column();\n}\n\n.col {\n  @include col();\n}\n\n.col.reverse {\n  @include col-reverse();\n}\n\n.first {\n  order: -1;\n}\n\n.last {\n  order: 1;\n}\n\n.align-start {\n  align-self: flex-start;\n}\n\n.align-end {\n  align-self: flex-end;\n}\n\n.align-center {\n  align-self: center;\n}\n\n.align-baseline {\n  align-self: baseline;\n}\n\n.align-stretch {\n    align-self: stretch;\n}\n\n// Mixin to run inside of for loop - creates col/breakpoint classes * Not for developer use *\n@mixin col-factory($thisPrefix) {\n  .col-#{$thisPrefix} {\n    box-sizing: border-box;\n    flex-grow: 1;\n    flex-basis: 0;\n    max-width: 100%;\n    padding: $gutter;\n  }\n  @for $i from 1 through $grid-columns {\n    .col-#{$thisPrefix}-#{$i} {\n      box-sizing: border-box;\n      flex-basis: calc(100% / $grid-columns) * $i;\n      max-width: calc(100% / $grid-columns) * $i;\n      padding: $gutter;\n    }\n    .col-#{$thisPrefix}-offset-#{$i} {\n      margin-left: calc(100% / $grid-columns) * $i;\n    }\n  }\n  .row.start-#{$thisPrefix} {\n    justify-content: flex-start;\n  }\n  .row.center-#{$thisPrefix} {\n    justify-content: center;\n  }\n  .row.end-#{$thisPrefix} {\n    justify-content: flex-end;\n  }\n  .row.top-#{$thisPrefix} {\n    align-items: flex-start;\n  }\n  .row.middle-#{$thisPrefix} {\n    align-items: center;\n  }\n  .row.bottom-#{$thisPrefix} {\n    align-items: flex-end;\n  }\n  .row.around-#{$thisPrefix} {\n    justify-content: space-around;\n  }\n  .row.between-#{$thisPrefix} {\n    justify-content: space-between;\n  }\n  .first-#{$thisPrefix} {\n    order: -1;\n  }\n  .last-#{$thisPrefix} {\n    order: 1;\n  }\n} // Mixin to run inside of for loop - creates col/breakpoint classes\n\n@for $i from 1 through length($breakpoint-up-prefixes) {\n  $thisPrefix: nth($breakpoint-up-prefixes, $i);\n  @if $thisPrefix == \"xs\" {\n    @include col-factory($thisPrefix);\n  } @else if $thisPrefix == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      @include col-factory($thisPrefix);\n    }\n  } @else if $thisPrefix == \"md\" {\n    @media #{$breakpoint-md-up} {\n      @include col-factory($thisPrefix);\n    }\n  } @else if $thisPrefix == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      @include col-factory($thisPrefix);\n    }\n  } @else if $thisPrefix == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      @include col-factory($thisPrefix);\n    }\n  }\n}\n\n.col-gutter-lr {\n    padding: 0 $gutter;\n}\n\n.col-no-gutter {\n    padding: 0;\n}\n","@mixin row($full-width: \"false\") {\n  box-sizing: border-box;\n  margin: 0 -20px;\n  //width: 100%;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  flex: 0 1 auto;\n  flex-direction: row;\n  flex-wrap: wrap;\n  // // Overrides flexbox's default behavior of making all children equal height\n  // align-items: flex-start; // If this was not in place it would require two classes to make a row full of unequal height columns aligned top, middle, bottom\n  @if type-of($content-well-max-width) == number and $content-well-max-width != 0 and $full-width == \"false\"{\n    max-width: $content-well-max-width;\n  }\n}\n\n@mixin row-reverse() {\n  flex-direction: row-reverse;\n}\n\n@mixin row-natural-height() {\n  align-items: flex-start;\n}\n\n@mixin row-flex-column() {\n  flex-direction: column;\n}\n\n@mixin col-reverse() {\n  flex-direction: column-reverse;\n}\n\n// Condition to run inside of the col mixin * not for developer use *\n@mixin col-condition($col-number) {\n  @if type-of($col-number) == number {\n    @if $col-number > $grid-columns or $col-number == 0 {\n      @warn \"Column number must be greater than 0 and less than or equal to total number of columns in the grid (#{$grid-columns})\";\n    } @else {\n      box-sizing: border-box;\n      flex-basis: calc(100% / $grid-columns) * $col-number;\n      max-width: calc(100% / $grid-columns) * $col-number;\n      padding: $gutter;\n    }\n  // If no col number is passed then arg is set to \"auto\" by default\n  // \"auto\" mode fills the horizontal space with evenly sized containers\n  } @else if $col-number == \"auto\" {\n    box-sizing: border-box;\n    flex-grow: 1;\n    flex-basis: 0;\n    max-width: 100%;\n    padding: $gutter;\n  } @else {\n    @warn \"Column number argument must either be the string 'auto' or a number greater than 0 and less than or equal to total number of columns in the grid (#{$grid-columns})\";\n  }\n} // Condition to run inside of the col mixin * not for developer use *\n\n@mixin col($breakpoint: \"xs\", $col-number: \"auto\") {\n  // If no breakpoint is passed and a col number is just use the first arg as the col number and act like xs\n  @if type-of($breakpoint) == number {\n    $col-number: $breakpoint;\n    @include col-condition($col-number);\n  } @else if $breakpoint == \"xs\" {\n    @include col-condition($col-number);\n  } @else if $breakpoint == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      @include col-condition($col-number);\n    }\n  } @else if $breakpoint == \"md\" {\n    @media #{$breakpoint-md-up} {\n      @include col-condition($col-number);\n    }\n  } @else if $breakpoint == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      @include col-condition($col-number);\n    }\n  } @else if $breakpoint == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      @include col-condition($col-number);\n    }\n  } @else {\n    @warn \"col mixin requires one of the existing breakpoint prefixes (#{$breakpoint-up-prefixes})\";\n  }\n}\n\n// Condition to run inside of the col-offset mixin * not for developer use *\n@mixin col-offset-condition($offset-number) {\n  @if type-of($offset-number) != number {\n    @warn \"Column offset number must be a number (only arg or second arg in the col mixin)\";\n  } @else if $offset-number == 0 {\n    @warn \"Column offset number must be greater than 0 and less than or equal to total number of columns in the grid (#{$grid-columns})\";\n  } @else if $offset-number > $grid-columns {\n    @warn \"Column offset number must be greater than 0 and less than or equal to total number of columns in the grid (#{$grid-columns})\";\n  } @else {\n    margin-left: calc(100% / $grid-columns * $offset-number);\n  }\n} // Condition to run inside of the col-offset mixin * not for developer use *\n\n@mixin col-offset($breakpoint: \"xs\", $offset-number: 0) {\n  // If no breakpoint is passed and a col number is just use the first arg as the col number and act like xs\n  @if type-of($breakpoint) == number {\n    $offset-number: $breakpoint;\n    @include col-offset-condition($offset-number);\n  } @else if $breakpoint == \"xs\" {\n    @include col-offset-condition($offset-number);\n  } @else if $breakpoint == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      @include col-offset-condition($offset-number);\n    }\n  } @else if $breakpoint == \"md\" {\n    @media #{$breakpoint-md-up} {\n      @include col-offset-condition($offset-number);\n    }\n  } @else if $breakpoint == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      @include col-offset-condition($offset-number);\n    }\n  } @else if $breakpoint == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      @include col-offset-condition($offset-number);\n    }\n  } @else {\n    @warn \"col mixin requires one of the existing breakpoint prefixes (#{$breakpoint-up-prefixes})\";\n  }\n}\n\n@mixin start($breakpoint: \"xs\") {\n  @if $breakpoint == \"xs\" {\n    justify-content: flex-start;\n  } @else if $breakpoint == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      justify-content: flex-start;\n    }\n  } @else if $breakpoint == \"md\" {\n    @media #{$breakpoint-md-up} {\n      justify-content: flex-start;\n    }\n  } @else if $breakpoint == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      justify-content: flex-start;\n    }\n  } @else if $breakpoint == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      justify-content: flex-start;\n    }\n  } @else {\n    @warn \"start mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\n  }\n}\n\n@mixin center($breakpoint: \"xs\") {\n  @if $breakpoint == \"xs\" {\n    justify-content: center;\n  } @else if $breakpoint == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      justify-content: center;\n    }\n  } @else if $breakpoint == \"md\" {\n    @media #{$breakpoint-md-up} {\n      justify-content: center;\n    }\n  } @else if $breakpoint == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      justify-content: center;\n    }\n  } @else if $breakpoint == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      justify-content: center;\n    }\n  } @else {\n    @warn \"center mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\n  }\n}\n\n@mixin end($breakpoint: \"xs\") {\n  @if $breakpoint == \"xs\" {\n    justify-content: flex-end;\n  } @else if $breakpoint == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      justify-content: flex-end;\n    }\n  } @else if $breakpoint == \"md\" {\n    @media #{$breakpoint-md-up} {\n      justify-content: flex-end;\n    }\n  } @else if $breakpoint == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      justify-content: flex-end;\n    }\n  } @else if $breakpoint == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      justify-content: flex-end;\n    }\n  } @else {\n    @warn \"end mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\n  }\n}\n\n@mixin top($breakpoint: \"xs\") {\n  @if $breakpoint == \"xs\" {\n    align-items: flex-start;\n  } @else if $breakpoint == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      align-items: flex-start;\n    }\n  } @else if $breakpoint == \"md\" {\n    @media #{$breakpoint-md-up} {\n      align-items: flex-start;\n    }\n  } @else if $breakpoint == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      align-items: flex-start;\n    }\n  } @else if $breakpoint == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      align-items: flex-start;\n    }\n  } @else {\n    @warn \"top mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\n  }\n}\n\n@mixin middle($breakpoint: \"xs\") {\n  @if $breakpoint == \"xs\" {\n    align-items: center;\n  } @else if $breakpoint == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      align-items: center;\n    }\n  } @else if $breakpoint == \"md\" {\n    @media #{$breakpoint-md-up} {\n      align-items: center;\n    }\n  } @else if $breakpoint == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      align-items: center;\n    }\n  } @else if $breakpoint == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      align-items: center;\n    }\n  } @else {\n    @warn \"middle mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\n  }\n}\n\n@mixin bottom($breakpoint: \"xs\") {\n  @if $breakpoint == \"xs\" {\n    align-items: flex-end;\n  } @else if $breakpoint == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      align-items: flex-end;\n    }\n  } @else if $breakpoint == \"md\" {\n    @media #{$breakpoint-md-up} {\n      align-items: flex-end;\n    }\n  } @else if $breakpoint == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      align-items: flex-end;\n    }\n  } @else if $breakpoint == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      align-items: flex-end;\n    }\n  } @else {\n    @warn \"bottom mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\n  }\n}\n\n@mixin around($breakpoint: \"xs\") {\n  @if $breakpoint == \"xs\" {\n    justify-content: space-around;\n  } @else if $breakpoint == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      justify-content: space-around;\n    }\n  } @else if $breakpoint == \"md\" {\n    @media #{$breakpoint-md-up} {\n      justify-content: space-around;\n    }\n  } @else if $breakpoint == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      justify-content: space-around;\n    }\n  } @else if $breakpoint == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      justify-content: space-around;\n    }\n  } @else {\n    @warn \"around mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\n  }\n}\n\n@mixin between($breakpoint: \"xs\") {\n  @if $breakpoint == \"xs\" {\n    justify-content: space-between;\n  } @else if $breakpoint == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      justify-content: space-between;\n    }\n  } @else if $breakpoint == \"md\" {\n    @media #{$breakpoint-md-up} {\n      justify-content: space-between;\n    }\n  } @else if $breakpoint == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      justify-content: space-between;\n    }\n  } @else if $breakpoint == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      justify-content: space-between;\n    }\n  } @else {\n    @warn \"between mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\n  }\n}\n\n@mixin first($breakpoint: \"xs\") {\n  @if $breakpoint == \"xs\" {\n    order: -1;\n  } @else if $breakpoint == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      order: -1;\n    }\n  } @else if $breakpoint == \"md\" {\n    @media #{$breakpoint-md-up} {\n      order: -1;\n    }\n  } @else if $breakpoint == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      order: -1;\n    }\n  } @else if $breakpoint == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      order: -1;\n    }\n  } @else {\n    @warn \"first mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\n  }\n}\n\n@mixin last($breakpoint: \"xs\") {\n  @if $breakpoint == \"xs\" {\n    order: 1;\n  } @else if $breakpoint == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      order: 1;\n    }\n  } @else if $breakpoint == \"md\" {\n    @media #{$breakpoint-md-up} {\n      order: 1;\n    }\n  } @else if $breakpoint == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      order: 1;\n    }\n  } @else if $breakpoint == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      order: 1;\n    }\n  } @else {\n    @warn \"last mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\n  }\n}\n","@import \"grid/main\";\n@import \"partials/variables\";\n\n@import \"blocks/carousel\";\n@import \"blocks/case-study\";\n@import \"blocks/headline\";\n@import \"blocks/hero\";\n@import \"blocks/video-embed\";\n\n@import \"components/banner\";\n@import \"components/columns-layout\";\n@import \"components/form-hero\";\n@import \"components/logo-grid\";\n@import \"components/media-text\";\n@import \"components/testimonials\";\n@import \"components/mc-infinite-carousel\";\n\n@import \"../../template-parts/blocks/mc-logos/style.css\";\n@import \"../../template-parts/blocks/mc-carousel/style.css\";\n\n.wp-block-acf-hero, .wp-block-acf-testimonial-block {\n  max-width: 1400px;\n  \n    .contain {\n      padding-left: 88px;\n      padding-right: 88px;\n      max-width: 840px;\n      margin: auto;\n    }\n  \n}\n","// Grid\n$grid-columns: 12 !default; // Set number of columns in the grid\n\n$xs-max: 767px !default; // Set xs breakpoint's max width\n$sm-max: 991px !default; // Set sm breakpoint's max width\n$md-max: 1279px !default; // Set md breakpoint's max width\n$lg-max: 1439px !default; // Set lg breakpoint's max width\n\n$gutter: 0 20px !default; // Set gutter size\n\n$content-well-max-width: \"none\" !default; // Set the max-width of the content well\n\n$sm-start: ($xs-max + 1); // Generate sm breakpoint's min width\n$md-start: ($sm-max + 1); // Generate md breakpoint's min width\n$lg-start: ($md-max + 1); // Generate lg breakpoint's min width\n$xl-start: ($lg-max + 1); // Generate xl breakpoint's min width\n\n// Breakpoints\n// Create breakpoint range statements to be used in media queries\n$breakpoint-xs-only: \"only screen and (max-width: #{$xs-max})\"; // 0 -> xs-max range\n$breakpoint-sm-up: \"only screen and (min-width: #{$sm-start})\"; // sm-start -> up range\n$breakpoint-sm-only: \"only screen and (min-width: #{$sm-start}) and (max-width: #{$sm-max})\"; // sm-start -> sm-max range\n$breakpoint-md-up: \"only screen and (min-width: #{$md-start})\"; // md-start -> up range\n$breakpoint-md-only: \"only screen and (min-width: #{$md-start}) and (max-width: #{$md-max})\"; // md-start -> md-max range\n$breakpoint-lg-up: \"only screen and (min-width: #{$lg-start})\"; // lg-start -> up range\n$breakpoint-lg-only: \"only screen and (min-width: #{$lg-start}) and (max-width: #{$lg-max})\"; // lg-start -> lg-max range\n$breakpoint-xl-up: \"only screen and (min-width: #{$xl-start})\"; // xl-start -> up range\n\n$breakpoints-all: ($breakpoint-xs-only, $breakpoint-sm-up, $breakpoint-sm-only, $breakpoint-md-up, $breakpoint-md-only, $breakpoint-lg-up, $breakpoint-lg-only, $breakpoint-xl-up);\n$breakpoint-ups: ($breakpoint-sm-up, $breakpoint-md-up, $breakpoint-lg-up, $breakpoint-xl-up);\n$breakpoint-all-prefixes: (\"xs\", \"xs-only\", \"sm\", \"sm-only\", \"md\", \"md-only\", \"lg\", \"lg-only\", \"xl\");\n$breakpoint-up-prefixes: (\"xs\", \"sm\", \"md\", \"lg\", \"xl\");\n","\n.show {\n  display: block !important;\n}\n\n.row.show {\n  display: -webkit-flex !important;\n  display: -ms-flexbox !important;\n  display: flex !important;\n}\n\n.hide {\n  display: none !important;\n}\n\n// Mixin to run inside of for loop - creates visibility classes * Not for developer use *\n@mixin vis-factory($thisPrefix) {\n  .show-#{$thisPrefix} {\n    display: block !important;\n  }\n  .row.show-#{$thisPrefix} {\n    display: -webkit-flex !important;\n    display: -ms-flexbox !important;\n    display: flex !important;\n  }\n  .hide-#{$thisPrefix} {\n    display: none !important;\n  }\n} // Mixin to run inside of for loop - creates visibility classes * Not for developer use *\n\n@for $i from 1 through length($breakpoint-all-prefixes) {\n  $thisPrefix: nth($breakpoint-all-prefixes, $i);\n  @if $thisPrefix == \"xs\" {\n    @include vis-factory($thisPrefix);\n  } @else if $thisPrefix == \"xs-only\" {\n    @media #{$breakpoint-xs-only} {\n      @include vis-factory($thisPrefix);\n    }\n  } @else if $thisPrefix == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      @include vis-factory($thisPrefix);\n    }\n  } @else if $thisPrefix == \"sm-only\" {\n    @media #{$breakpoint-sm-only} {\n      @include vis-factory($thisPrefix);\n    }\n  } @else if $thisPrefix == \"md\" {\n    @media #{$breakpoint-md-up} {\n      @include vis-factory($thisPrefix);\n    }\n  } @else if $thisPrefix == \"md-only\" {\n    @media #{$breakpoint-md-only} {\n      @include vis-factory($thisPrefix);\n    }\n  } @else if $thisPrefix == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      @include vis-factory($thisPrefix);\n    }\n  } @else if $thisPrefix == \"lg-only\" {\n    @media #{$breakpoint-lg-only} {\n      @include vis-factory($thisPrefix);\n    }\n  } @else if $thisPrefix == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      @include vis-factory($thisPrefix);\n    }\n  }\n}\n","@function encodecolor($string) {\n  @if type-of($string) == 'color' and str-index(#{$string}, '#') == 1 {\n    $hex: str-slice(ie-hex-str($string), 4);\n    $string: unquote('#{$hex}');\n\n    @return '%23' + $string;\n  }\n\n  @return $string;\n}\n\n//@font-face {\n//  font-family: \"Capito\";\n//  src: url(\"../fonts/Capito03-Medium.woff2\") format(\"woff2\");\n//  font-weight: 450;\n//  font-display: swap;\n//  unicode-range: U+0025-00FF;\n//}\n\n@font-face {\n  font-family: \"Capito\";\n  src: url(\"../fonts/Capito03-Bold.woff2\") format(\"woff2\");\n  font-weight: 700;\n  font-display: swap;\n  //unicode-range: U+0025-00FF;\n}\n\n@font-face {\n  font-family: \"National\";\n  src: url(\"../fonts/national-regular.woff2\") format(\"woff2\");\n  font-weight: normal;\n  font-display: swap;\n  //unicode-range: U+0025-00FF;\n}\n\n//@font-face {\n//  font-family: \"National\";\n//  src: url(\"../fonts/national-semibold.woff2\") format(\"woff2\");\n//  font-weight: bold;\n//  font-display: swap;\n//  unicode-range: U+0025-00FF;\n//}\n\n$titleFont: 'Capito', serif;\n$bodyFont: 'National', sans-serif;\n\n\n/******************************************\n// Colors\n******************************************/\n\n$black: #000000;\n$white: #ffffff;\n$error: #ff2323;\n\n$river: #00BEFF;\n  $riverShade1: #01A3DB;\n$ocean: #0073B4;\n  $oceanShade2: #005788;\n$deepSea: #004168;\n  $deepSeaShade1: #1d4b67;\n$fish: #D89700;\n  $fishTint1: #EDA600;\n  $fishShade1: #C08701;\n$seastar: #FF9FB9;\n$grass: #51C08B;\n  $grassShade1: #53AA80;\n$sky: #E6F1F6;\n  $skyShade1: #BFD0D9;\n  $skyShade2: #8099A9;\n\n$text-main: $deepSeaShade1;\n$text-secondary: $white;\n\n$button-primary: $fishTint1;\n$button-secondary: blue;\n$button-primary-hover: $fishShade1;\n$button-secondary-hover: rgb(81, 81, 235);\n$button-text: $deepSeaShade1;\n\n$link-primary: #000;\n$link-secondary: blue;\n$link-primary-hover: #333;\n$link-secondary-hover: rgb(81, 81, 235);\n\n$encoded-link-primary: encodecolor($link-primary);\n$encoded-link-primary-hover: encodecolor($link-primary-hover);\n$encoded-link-secondary: encodecolor($link-secondary);\n$encoded-link-secondary-hover: encodecolor($link-secondary-hover);\n\n/******************************************\n// Font sizes\n******************************************/\n\n$h1: clamp(45px, 5.093vw, 65px);\n$h2: clamp(40px, 4.167vw, 55px);\n$h3: clamp(35px, 3.7037vw, 45px);\n$h4: clamp(30px, 3.241vw, 40px);\n$h5: clamp(25px, 2.7778vw, 35px);\n$h6: clamp(20px, 2.315vw, 30px);\n\n$h1Weight: 700;\n$h2Weight: 700;\n$h3Weight: 700;\n$h4Weight: 700;\n$h5Weight: 700;\n$h6Weight: 700;\n\n$b1: clamp(22px, 2.176vw, 25px);\n$b2: clamp(20px, 1.944vw, 22px);\n$b3: clamp(18px, 1.759vw, 20px);\n$b4: clamp(15px, 1.527vw, 18px);\n$b5: clamp(13px, 1.296vw, 15px);\n$b6: 13px;\n\n$p: $b1;\n$p-sm: $b2;\n$p-xs: $b3;\n$p-legal: $b6;\n\n$posth1: $h3;\n$posth2: $h4;\n$posth3: $h5;\n$posth4: $h6;\n$posth5: $b1;\n$posth6: $b2;\n\n$sub-text-sm: $b2;\n$sub-text-lg: $b1;\n\n// Sizes in the CMS (Uses desktop size from the clamp equation but in px instead of vw)\n\n$cms-h1: 55px;\n$cms-h2: 45px;\n$cms-h3: 40px;\n$cms-h4: 35px;\n$cms-h5: 30px;\n$cms-h6: 25px;\n\n$cms-p: 24px;\n$cms-p-sm: 21px;\n$cms-p-xs: 19px;\n$cms-p-legal: 13px;\n\n/******************************************\n// Sizes\n******************************************/\n\n$m8: clamp(calc(8px*.75), 0.586vw, 8px);\n$m16: clamp(calc(16px*.875), 1.171vw, 16px);\n$m24: clamp(calc(24px*.875), 1.757vw, 24px);\n$m32: clamp(calc(32px*.875), 2.343vw, 32px);\n$m40: clamp(calc(40px*.75), 2.928vw, 40px);\n$m48: clamp(calc(48px*.75), 3.514vw, 48px);\n$m56: clamp(calc(56px*.75), 4.100vw, 56px);\n$m64: clamp(calc(64px*.75), 4.685vw, 64px);\n$m72: clamp(calc(72px*.75), 5.271vw, 72px);\n$m80: clamp(calc(80px*.75), 5.857vw, 80px);\n$m88: clamp(calc(88px*.75), 6.442vw, 88px);\n$m96: clamp(calc(96px*.75), 7.028vw, 96px);\n$m104: clamp(calc(104px*.75), 7.613vw, 104px);\n$m112: clamp(calc(112px*.75), 8.199vw, 112px);\n$m120: clamp(calc(120px*.75), 8.785vw, 120px);\n$m128: clamp(calc(128px*.75), 9.370vw, 128px);\n$m136: clamp(calc(136px*.75), 9.956vw, 136px);\n$m144: clamp(calc(144px*.75), 10.542vw, 144px);\n$m184: clamp(calc(184px*.75), 13.470vw, 184px);\n$m240: clamp(calc(240px*.75), 17.570vw, 240px);\n\n$spacer-xxs: $m8;\n$spacer-xs: $m16;\n$spacer-sm: $m24;\n$spacer-md: $m32;\n$spacer-lg: $m48;\n$spacer-xl: $m64;\n$spacer-xxl: $m80;\n$spacer-section-break: $m120;\n\n/******************************************\n// Transitions\n******************************************/\n\n$trans1: .3s;\n$trans2: .4s;\n$trans3: .6s;\n\n/******************************************\n// Mixins\n******************************************/\n\n@mixin contain() {\n  margin: 0 auto;\n  max-width: 1440px;\n  padding-left: clamp(6.400vw, 6.400vw, 48px); //24px\n  padding-right: clamp(6.400vw, 6.400vw, 48px); //24px\n  \n    @media only screen and (min-width: $sm-start) {\n      padding-left: clamp(48px, 6.25vw, 88px); //88px\n      padding-right: clamp(48px, 6.25vw, 88px); //88px\n    }\n  \n    //@media only screen and (min-width: $md-start) {\n    //  padding-left: clamp(88px, 7.871vw, 106px); //106px\n    //  padding-right: clamp(88px, 7.871vw, 106px); //106px\n    //}\n    \n    @media only screen and (min-width: $lg-start) {\n      padding-left: clamp(106px, 8.281vw, 120px); //120px\n      padding-right: clamp(106px, 8.281vw, 120px); //120px\n    }\n  \n}\n\n@mixin paddingHack($paddingBottom) {\n  content: \" \";\n  display: block;\n  padding-bottom: $paddingBottom;\n}\n\n@mixin imgPadHack($paddingBottom, $x: 50%, $y: 50%) {\n  position: relative;\n  \n    &:after {\n      @include paddingHack($paddingBottom);\n    }\n\n    img {\n      position: absolute;\n      width: 100%;\n      height: 100%;\n      object-fit: cover;\n      object-position: $x $y;\n    }\n  \n}\n\n@mixin grid-center-last( $columns ) {\n\t$total_columns: $columns * 2;\n\t$span: calc($total-columns / $columns);\n\t$offset: $columns - 1;\n\t$nth-child: if( $columns % 2 == 0, 'odd', 'even' );\n\n\tdisplay: grid;\n\tgrid-template-columns: repeat( $total_columns, 1fr );\n\n\t& > * {\n\t\tgrid-column: span $span;\n\n\t\t&:nth-last-child(#{$offset}):nth-child(#{$nth-child}) {\n\t\t\tgrid-column: $span / span $span;\n\t\t}\n\t}\n}\n\n@mixin plusMinus($width, $lineWidth, $color) {\n  box-sizing: border-box;\n  transition: transform 0.3s;\n  width: $width;\n  height: $width;\n  transform: rotate(180deg);\n  position: relative;\n  &.active, &.is-active {\n    transform: rotate(0deg);\n  }\n  &::before {\n    content: '';\n    display: block;\n    width: $width;\n    height:0px;\n    border-bottom: solid $lineWidth $color;\n    position: absolute;\n    bottom: calc($width /2 - $lineWidth/2);\n    transform: rotate(90deg);\n    transition: all 0.3s ease;\n  }\n  &.active::before, &.is-active::before {\n    content: '';\n    display: block;\n    width: 0px;\n    height:0px;\n    border-bottom: solid $lineWidth;\n    position: absolute;\n    bottom: calc($width /2 - $lineWidth/2);\n    transform: rotate(90deg);\n  }\n  &::after {\n    content: '';\n    display: block;\n    width: $width;\n    height:0px;\n    border-bottom: solid $lineWidth $color;\n    position: absolute;\n    bottom: calc($width /2 - $lineWidth/2);\n    transition: all .3s ease;\n  }\n  &.active::after, &.is-active::after {\n    border-bottom: solid $lineWidth;\n  }\n}\n\n@mixin arrowIcon($color: black) {\n  background-image: url(\"data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 13'%3E%3Cpath d='m21.72,7.08H0v-1.23h21.66L16.75.87l.85-.87,5.97,6.07.43.43-.43.43-5.97,6.07-.85-.87,4.97-5.05Z' fill='#{$color}' fill-rule='evenodd'/%3E%3C/svg%3E\");\n  background-repeat: no-repeat;\n  background-size: 100% 100%;\n  background-position: center center;\n}\n\n@mixin shapeDivider($height, $position, $flipped: false, $color: #ffffff) {\n    \n  @if $position == bottom {\n    bottom: 0;\n    transform: rotate(180deg);\n  } @else {\n    top: 0;\n  }\n\n    svg {\n      height: $height;\n      \n        @if $flipped {\n          transform: rotateY(180deg);\n        }\n      \n    }\n\n    .shape-fill {\n      fill: $color;\n    }\n\n}\n",".block-carousel-block, .post-copy .block-carousel-block {\r\n  position: relative;\r\n  color: $deepSeaShade1;\r\n  padding-top: $m80;\r\n  padding-bottom: $m80;\r\n  .inner-container {\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: row;\r\n  }\r\n\r\n  h3 {\r\n    color: $text-main;\r\n    margin-bottom: $m24;\r\n    line-height: 1.1;\r\n  }\r\n\r\n  .content-container {\r\n    position: relative;\r\n  }\r\n\r\n  .indicator-bar {\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    width: 22px;\r\n    height: 100%;\r\n    background-color: #F4F6F8;\r\n    display: none;\r\n    @media only screen and (min-width: $sm-start) {\r\n      display: block;\r\n    }\r\n    .indicator {\r\n      width: 100%; \r\n      height: 30px;\r\n      background-color: #E4E7EA;\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  .spacer {\r\n    width: 50%;\r\n    flex-shrink: 0;\r\n    position: relative;\r\n    @media only screen and (min-width: $sm-start) {\r\n      flex-shrink: 0.25;\r\n    }\r\n    @media only screen and (min-width: $md-start) {\r\n      flex-shrink: 0;\r\n    }\r\n  }\r\n\r\n  .img {\r\n    width: 100%;\r\n    position: relative;\r\n    left: 0;\r\n    margin-top: $m40;\r\n    &:after {\r\n      content: \" \";\r\n      display: block;\r\n      padding-bottom: 66.56%;\r\n    }\r\n    @media only screen and (min-width: $sm-start) {\r\n      margin-top: 0;\r\n      top: 50%;\r\n      transform: translateY(-50%);\r\n    }\r\n    img {\r\n      position: absolute;\r\n      width: 100%;\r\n      height: 100%;\r\n      object-fit: cover;\r\n      object-position: 50% 50%;\r\n      opacity: 1;\r\n      visibility: visible;\r\n      @media only screen and (min-width: $sm-start) {\r\n        opacity: 0;\r\n        visibility: hidden;\r\n        &:first-of-type {\r\n          opacity: 1;\r\n          visibility: visible;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .item-list-container {\r\n    width: 100%;\r\n    @media only screen and (min-width: $sm-start) {\r\n      padding-left: calc(1/12 * 100%);\r\n    }\r\n  }\r\n\r\n  ul.list {\r\n    list-style: none;\r\n    padding-left: 0;\r\n    @media only screen and (min-width: $sm-start) {\r\n      padding-left: 30px !important;\r\n    }\r\n    li {\r\n      margin-bottom: $m16;\r\n      @media only screen and (min-width: $sm-start) {\r\n        opacity: 0.5;\r\n        &:first-of-type {\r\n          .content {\r\n            height: auto;\r\n          }\r\n        }\r\n      }\r\n      &.active {\r\n        opacity: 1;\r\n        button:before {\r\n          opacity: 1;\r\n        }\r\n      }\r\n      button {\r\n        position: relative;\r\n        width: 100%;\r\n        padding: 0;\r\n        text-align: left;\r\n        margin-bottom: $m16;\r\n        @media only screen and (min-width: $sm-start) {\r\n          margin-bottom: 0;\r\n        }\r\n        &:before {\r\n          content: '';\r\n          width: 22px;\r\n          height: 100%;\r\n          background-color: #E4E7EA;\r\n          position: absolute;\r\n          transform: translateX(calc(-100% - 8px));\r\n          opacity: 0;\r\n          display: none;\r\n          @media only screen and (min-width: $sm-start) {\r\n            display: block;\r\n            transition: all $trans2 ease;\r\n          }\r\n        }\r\n      }\r\n      &:last-child {\r\n        margin-bottom: 0;\r\n        .content {\r\n          margin-bottom: 0;\r\n        }\r\n        button {\r\n          @media only screen and (min-width: $sm-start) {\r\n            margin-bottom: 0;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  \r\n  .content {\r\n    font-size: $b1;\r\n    margin-bottom: $m48;\r\n    height: auto;\r\n    @media only screen and (min-width: $sm-start) {\r\n      height: 0;\r\n      overflow: hidden;\r\n      margin-bottom: $m8;\r\n    }\r\n    .img {\r\n      @media only screen and (min-width: $sm-start) {\r\n        display: none;\r\n      }\r\n    }\r\n    >*:first-child {\r\n        margin-top: $m8;\r\n    }\r\n    p {\r\n      line-height: 1.2;\r\n      margin-bottom: $m16;\r\n    }\r\n    .button-wrap {\r\n      margin-top: $m8;\r\n      margin-bottom: $m16;\r\n    }\r\n  }\r\n  \r\n  &.left .inner-container {\r\n    @media only screen and (min-width: $sm-start) {\r\n      flex-direction: row-reverse;\r\n    }\r\n    .item-list-container {\r\n      @media only screen and (min-width: $sm-start) {\r\n        padding-left: 0;\r\n        padding-right: calc(1/12 * 100%);\r\n      }\r\n    }\r\n  }\r\n}",".block-case-study-block {\n  padding-top: $m80;\n  padding-bottom: $m80;\n  \n    h2 {\n      margin-top: 0;\n      margin-bottom: $m48;\n    }\n    \n    .data-stack {\n      \n        p {\n          margin: 0 0 $m24;\n        }\n        \n        ul {\n          list-style: none;\n          padding: 0 !important;\n          margin: 0 0 $m56;\n          display: flex;\n          flex-wrap: wrap;\n          gap: 40px;\n          \n            @media only screen and (min-width: $sm-start) {\n              gap: 60px;\n            }\n          \n            li {\n              flex: 0 0 40px;\n              @include imgPadHack(100%);\n              \n                @media only screen and (min-width: $sm-start) {\n                  flex: 0 0 60px;\n                }\n              \n                img {\n                  object-fit: contain;\n                }\n              \n            }\n          \n        }\n      \n    }\n    \n    .callout-stats {\n      display: flex;\n      flex-direction: column;\n      gap: 40px;\n      \n        @media only screen and (min-width: $sm-start) {\n          flex-direction: row;\n        }\n        \n        >div {\n          \n            @media only screen and (min-width: $sm-start) {\n              max-width: 331px;\n              width: 40%;\n            }\n          \n        }\n      \n    }\n    \n    .challenge-solution {\n      margin: $m64 0 $m80;\n      padding: $m64 0;\n      border-top: 2px solid $skyShade1;\n      border-bottom: 2px solid $skyShade1;\n      \n        .row {\n          row-gap: $m64;\n        }\n      \n        h3 {\n          margin-bottom: $m24;\n        }\n        \n        .column-text {\n          font-size: $p-sm;\n          padding-right: $m16;\n        }\n        \n        li {\n          padding-left: 8px;\n          \n            &::marker {\n              font-size: 60%;\n            }\n          \n        }\n      \n    }\n    \n    .client-story {\n      \n        .client-logo {\n          margin-bottom: $m32;\n        }\n      \n        .quote {\n          font-family: $titleFont;\n          font-size: $h5;\n          line-height: 1.15;\n          margin-bottom: $m48;\n        }\n        \n        .quotee {\n          \n            span {\n              display: block;\n            }\n          \n        }\n        \n        .cta-wrap {\n          margin-top: $m24;\n        }\n      \n    }\n  \n}",".block-headline {\r\n  color: $deepSeaShade1;\r\n  padding-top: $m80;\r\n  padding-bottom: $m80;\r\n  h2 {\r\n    margin-top: 0;\r\n    margin-bottom: $m32;\r\n  }\r\n  .content {\r\n    &.left {\r\n      text-align: left;\r\n      \r\n        @media only screen and (min-width: $sm-start) {\r\n          //padding-right: 25%;\r\n          max-width: 75%;\r\n        }\r\n        @media only screen and (min-width: $md-start) {\r\n          //padding-right: 32%;\r\n          max-width: 70%;\r\n        }\r\n        @media only screen and (min-width: $lg-start) {\r\n          //padding-right: 40%;\r\n          max-width: 65%;\r\n        }\r\n      \r\n    }\r\n    &.center {\r\n      text-align: center;\r\n      margin: 0 auto;\r\n      \r\n        @media only screen and (min-width: $sm-start) {\r\n          max-width: 83.3333%;\r\n        }\r\n      \r\n    }\r\n  }\r\n  .img {\r\n    margin-top: $m48;\r\n    //@include imgPadHack(66.666667%);\r\n    \r\n      img {\r\n        width: 100%;\r\n        height: auto;\r\n      }\r\n    \r\n  }\r\n  p {\r\n    margin-bottom: $m32;\r\n  }\r\n  p:last-of-type {\r\n    margin-bottom: 0;\r\n  }\r\n  .button-wrap {\r\n    margin-top: $m24;\r\n  }\r\n  .cta-wrapper {\r\n    text-align: center;;\r\n    margin-top: $m64;\r\n  }\r\n}",".tbc_block-hero {\n  padding-top: calc(var(--header-height) + 60px);\n  padding-bottom: clamp(55px, 6.048vw, 80px);\n  \n    &:not(.is__preview) {\n      width: 100vw;\n      left: 50%;\n      position: relative;\n      transform: translateX(-50%);\n    }\n    \n    //&.is__preview {\n    //  padding-left: 40px;\n    //  padding-right: 40px;\n    //}\n\n    //h1, p, .cta, img {\n    //  opacity: 0;\n    //}\n    h1, p {\n      font-kerning: none;\n      div {\n        clip-path: polygon(0 0, 100% 0, 100% 120%, 0% 120%);\n      }\n    }\n  \n    .text {\n      margin-top: $m24;\n      \n        p {\n          margin-bottom: $m32;\n          \n            &:last-of-type {\n              margin-bottom: 0;\n            }\n          \n        }\n      \n    }\n    \n    .img-wrap {\n      margin-top: 50px;\n      \n        @media only screen and (min-width: $sm-start) {\n          margin-top: 0;\n        }\n      \n        &._1x1 {\n          @include imgPadHack(100%);\n          \n            img {\n              object-fit: contain;\n            }\n          \n        }\n        \n        &._3x2 {\n          @include imgPadHack(66.666667%);\n          \n            img {\n              object-fit: contain;\n            }\n          \n        }\n        \n        &._16x9 {\n          @include imgPadHack(56.25%);\n          \n            img {\n              object-fit: contain;\n            }\n          \n        }\n      \n    }\n  \n    .cta {\n      margin-top: $m48;\n      \n        .hbspt-form {\n          max-width: 435px;\n          margin-left: 5px;\n          \n            form {\n              position: relative;\n            }\n            \n            .field, fieldset {\n              width: 100%;\n              max-width: none;\n            }\n            \n            .hs_email .input {\n              width: calc(100% - 145px);\n              height: 56px;\n              position: relative;\n              background: $sky;\n              transform: skewX(-8deg);\n              z-index: 1;\n\n                input:not([type=radio]):not([type=checkbox]):not([type=submit]):not([type=button]):not([type=image]):not([type=file]) {\n                  height: 56px;\n                  background: transparent;\n                  font-size: 16px;\n                  transform: skewX(8deg);\n                  \n                    @media only screen and (min-width: $md-start) {\n                      font-size: 22px;\n                    }\n                  \n                }\n              \n            }\n            \n            .hs-submit {\n              position: absolute !important;\n              right: 0 !important;\n              top: 0 !important;\n              margin: 0 !important;\n              z-index: 2;\n              height: 56px !important;\n              \n                input.hs-button {\n                  width: 152px;\n                  height: 56px;\n                  font-size: 18px;\n                  padding: 0 10px;\n                  \n                    @media only screen and (min-width: $md-start) {\n                      width: 178px;\n                      font-size: $b3;\n                    }\n                  \n                }\n              \n            }\n          \n        }\n      \n    }\n    \n    &.layout-center {\n      text-align: center;\n      padding-bottom: clamp(55px, 7.048vw, 116px);\n      \n        @media only screen and (min-width: $sm-start) {\n          padding-top: calc(var(--header-height) + 80px);\n        }\n      \n        .text {\n          \n            @media only screen and (min-width: $sm-start) {\n              width: 84%;\n              margin-left: auto;\n              margin-right: auto;\n            }\n          \n        }\n        \n        .cta .hbspt-form {\n          margin: auto;\n        }\n      \n    }\n    \n    &.layout-right {\n      \n      @media only screen and (min-width: $sm-start) {\n        .row {\n          flex-direction: row-reverse;\n        }\n      }\n\n    }\n  \n}",".block-video-embed {\n  padding-top: $m80;\n  padding-bottom: $m80;\n\n    h2 {\n      margin-top: 0;\n      margin-bottom: 0;\n    }\n  \n    .responsive-embed {\n      position: relative;\n      width: 100%;\n      margin-top: $m48;\n      \n        &::after {\n          content: \" \";\n          display: block;\n          padding-bottom: 56.25%;\n        }\n        \n        iframe {\n          position: absolute;\n          width: 100%;\n          height: 100%;\n          top: 0;\n          left: 0;\n        }\n      \n    }\n  \n}",".comp_banner-cta {\n  padding: $m40 $m32 $m56;\n  //padding-top: $m40;\n  //padding-bottom: $m56;\n  //@include contain();\n\n  @media only screen and (min-width: $md-start) {\n    padding-top: $m64;\n    padding-bottom: $m64;\n    padding-left: $m128;\n    padding-right: $m128;\n  }\n  &.bg_seastar {\n    color: $text-main;\n    \n      a.btn.btn-lg {\n        color: #fff;\n        \n          &::before {\n            background: $ocean;\n          }\n\n          @media (hover: hover) and (pointer: fine) {\n            &:hover {\n              color: #fff;\n              text-decoration: none;\n\n              &::before {\n                background: $oceanShade2;\n                transform: translate(-50%, -50%) skewX(0deg);\n              }\n            }\n          }\n        \n      }\n    \n  }\n  \n  &.bg_ocean {\n    color: #fff;\n  }\n  \n  .banner-wrap {\n    display: flex;\n    flex-direction: column;\n    \n      @media only screen and (min-width: $sm-start) {\n        flex-direction: row;\n        align-items: center;\n        justify-content: space-between;\n      }\n    \n  }\n  \n  &.has-image {\n    \n    @media only screen and (min-width: $md-start) {\n      padding-left: $m80;\n      padding-right: $m80;\n    }\n    \n    .banner-wrap {\n\n      @media only screen and (min-width: $sm-start) {\n        justify-content: flex-start;\n      }\n\n    }\n    \n    .img {\n      width: 100%;\n      max-width: 165px;\n      margin-right: $m64;\n      margin-bottom: $m24;\n      @include imgPadHack(100%);\n      @media only screen and (min-width: $sm-start) {\n        margin-bottom: 0;\n      }\n    }\n    \n  }\n  \n  .content {\n    p.h3 {\n      margin-top: 0;\n    }\n    p:not(.h3) {\n      margin-top: $m24;\n    }\n  }\n  \n  .cta-container {\n    margin-top: $m48;\n    @media only screen and (min-width: $sm-start) {\n      display: flex;\n      justify-content: flex-end;\n      white-space: nowrap;\n      margin-left: $m64;\n      margin-top: 0;\n    }\n  }\n  \n}\n\n//.banner-block {\n//  background-color: #E4E7EA;\n//  padding: $m40 $m32 $m56;\n//  margin-top: $m64;\n//  margin-bottom: $m64;\n//  &:last-child {\n//    // this is to override the margin-bottom:0 applied to the last block on the page\n//    margin-bottom: $m64 !important;\n//  }\n//  @media only screen and (min-width: $md-start) {\n//    padding-left: 0;\n//    padding-right: 0;\n//  }\n//  h2 {\n//    margin-bottom: $m24;\n//    @media only screen and (min-width: $sm-start) {\n//      margin-bottom: 0;\n//    }\n//  }\n//  p{\n//    margin-top: $m16;\n//  }\n  \n//}",".block-cards-block {\n  padding-top: $m80;\n  padding-bottom: $m80;\n  \n  .cards-header {\n    @include row();\n    @include center(xs);\n    text-align: center;\n    margin-bottom: $m72;\n    \n      h2 {\n        margin: 0;\n      }\n    \n      .section-text {\n        margin-top: $m32;\n        \n          p {\n            margin-top: 0;\n            margin-bottom: $m32;\n          }\n          \n          :last-child {\n            margin-bottom: 0;\n          }\n        \n      }\n    \n  }\n  \n  .comp__columns-layout {\n    \n      &.narrow {\n        display: grid;\n        gap: $m64;\n        \n          @media only screen and (max-width: $xs-max ) {\n            \n              .box-media {\n                width: 60%;\n                margin: auto;\n              }\n            \n          }\n        \n          @media only screen and (min-width: $sm-start) {\n            grid-template-columns: repeat(3, 1fr);\n            \n              &.centered-layout {\n                @include grid-center-last( 3 );\n              }\n            \n          }\n          \n          @media only screen and (min-width: $md-start) {\n            max-width: 83.3333333%;\n            margin: auto;\n            justify-content: space-between;\n            \n              .card_box {\n                max-width: 226px;\n                margin-left: auto;\n                margin-right: auto;\n              }\n            \n          }\n          \n          .card_box {\n            width: 100%;\n          }\n          \n          .box-title {\n            \n              p {\n                font-size: clamp(25px, 2.315vw, 30px);\n                font-family: $titleFont;\n                font-weight: $h6Weight;\n                line-height: 1.15;\n              }\n            \n          }\n\n      }\n      \n      &.wide {\n        display: grid;\n        gap: $m64;\n        \n          @media only screen and (min-width: $sm-start) {\n            grid-template-columns: repeat(3, 1fr);\n            justify-content: space-between;\n            row-gap: $m72;\n            \n              &.centered-layout {\n                @include grid-center-last( 3 );\n              }\n            \n              .card_box {\n                max-width: 330px;\n              }\n            \n          }\n          \n          .box-title {\n\n              p {\n                @extend .h5;\n              }\n\n          }\n        \n      }\n      \n      &.four_col {\n        \n          @media only screen and (min-width: $sm-start) {\n            grid-template-columns: repeat(2, 1fr);\n          }\n          \n          @media only screen and (min-width: $md-start) {\n            grid-template-columns: repeat(4, 1fr);\n            max-width: none;\n          }\n        \n      }\n\n      .box-contain {\n        width: 100%;\n\n          .box-media {\n            \n              a {\n                position: absolute;\n                top: 0;\n                left: 0;\n                width: 100%;\n                height: 100%;\n              }\n            \n              &._16x9 {\n                @include imgPadHack(56.25%);\n              }\n              \n              &._3x2 {\n                @include imgPadHack(66.66666667%);\n              }\n              \n              &._1x1 {\n                @include imgPadHack(100%);\n              }\n              \n              &._16x9, &._3x2, &._1x1 {\n  \n                  &.contained {\n                    \n                      img {\n                        object-fit: contain;\n                      }\n                    \n                  }\n                \n              }\n\n          }\n\n          .box-content {\n            margin-top: $spacer-sm;\n\n              .box-title {\n                margin-bottom: $spacer-xs;\n              }\n\n              .box-copy {\n                \n                p {\n                  font-size: $p-sm;\n                  line-height: 1.2;\n                  margin-bottom: $m24;\n                \n                    &:last-of-type {\n                      margin-bottom: 0;\n                    }\n                    \n                    &.h1 {\n                      font-size: $h1;\n                    }\n                    \n                    &.h2 {\n                      font-size: $h2;\n                    }\n                    \n                    &.h3 {\n                      font-size: $h3;\n                    }\n                    \n                    &.h4 {\n                      font-size: $h4;\n                    }\n                    \n                    &.h5 {\n                      font-size: $h5;\n                    }\n                  \n                }\n\n                :last-child {\n                  margin-bottom: 0;\n                }\n\n              }\n\n              .button-wrap {\n                margin-top: $spacer-sm;\n              }\n\n          }\n\n      }\n\n  }\n  \n  .section-cta-wrap {\n    margin-top: $m80;\n  }\n  \n}",".block-form-hero {\n  width: calc(100% + (clamp(6.4vw, 6.4vw, 48px) * 2));\n  margin-left: calc(clamp(6.4vw, 6.4vw, 48px) * -1);\n  \n    @media only screen and (min-width: $sm-start) {\n      width: calc(100% + (clamp(48px, 6.25vw, 88px) * 2));\n      margin-left: calc(clamp(48px, 6.25vw, 88px) * -1);\n    }\n    \n    @media only screen and (min-width: $lg-start) {\n      width: calc(100% + (clamp(106px, 8.281vw, 120px) * 2));\n      margin-left: calc(clamp(106px, 8.281vw, 120px) * -1);\n    }\n  \n}\n\n.comp__form-hero {\n  padding-top: calc(#{var(--header-height)} + #{$m128});\n  padding-bottom: $m80;\n  \n    >.row {\n      row-gap: $m64;\n    }\n    \n    //h1, p, .cta, img {\n    //  opacity: 0;\n    //}\n    h1, p {\n      font-kerning: none;\n      div {\n        clip-path: polygon(0 0, 100% 0, 100% 120%, 0% 120%);\n      }\n    }\n  \n    .content {\n      \n        .text {\n          margin-top: $m24;\n        }\n        \n        img {\n          width: 100%;\n          height: auto;\n          margin-top: $m56;\n        }\n      \n    }\n    \n    .hero-form {\n      \n        .hbspt-form {\n          \n            fieldset {\n              max-width: 100%;\n              \n                .field {\n                  \n                    label {\n                      font-size: $b1;\n                      font-weight: 700;\n                      font-family: $titleFont;\n                    }\n                  \n                }\n                \n                input:not([type=radio]):not([type=checkbox]):not([type=submit]):not([type=button]):not([type=image]):not([type=file]) {\n                  width: 100%;\n                  margin-top: $m8;\n                }\n                \n                .hs-error-msgs {\n              \n                    li label.hs-error-msg {\n                      font-size: 13px !important;\n                      font-family: $bodyFont;\n                      margin-bottom: 0;\n                    }\n                  \n                }\n              \n            }\n            \n            .hs-form-field {\n              margin-bottom: $m24;\n            }\n            \n        }\n        \n        &.two-column {\n          \n            fieldset {\n              \n                .field {\n                  \n                    label {\n                      font-size: $b1;\n                    }\n                  \n                }\n                \n            }\n            \n            .hs-form-field {\n              margin-bottom: $m24;\n            }\n          \n            fieldset.form-columns-2 {\n              display: flex;\n              flex-wrap: wrap;\n              justify-content: flex-start;\n              \n                >div {\n                  flex-grow: 1;\n                  min-width: 200px;\n                }\n                \n                input:not([type=radio]):not([type=checkbox]):not([type=submit]):not([type=button]):not([type=image]):not([type=file]) {\n                  width: 100%;\n                  margin-top: $m8;\n                }\n              \n            }\n          \n        }\n      \n    }\n  \n}",".comp__logo-grid {\n  padding-top: $m80;\n  padding-bottom: $m80;\n  \n    .title {\n      margin: 0 auto $m48;\n    }\n    \n    .logos-container {\n      \n        &.animate_scroll {\n          overflow: hidden;\n          width: 100vw;\n          left: 50%;\n          position: relative;\n          transform: translateX(-50%);\n\n            ul {\n              display: flex;\n              list-style: none;\n              align-items: center;\n              padding: 0;\n              margin: 0;\n\n                li {\n                  flex: 0 0 33.333333%;\n                  width: 33.333333%;\n                  max-width: 33.333333%;\n                  height: auto;\n                  margin: 0;\n                  text-align: center;\n                  will-change: transform;\n\n                    @media only screen and (min-width: $md-start) {\n                      flex: 0 0 20%;\n                      width: 20%;\n                      max-width: 20%;\n                    }\n\n                    @media only screen and (min-width: $lg-start) {\n                      flex: 0 0 14%;\n                      width: 14%;\n                      max-width: 14%;\n                    }\n\n                    &::after {\n                      content: \" \";\n                      padding-bottom: 25%;\n                      display: block;\n                    }\n\n                    .fit {\n                      position: absolute;\n                      top: 0;\n                      left: 0;\n                      width: 100%;\n                      height: 100%;\n                      display: flex;\n                      justify-content: center;\n                      align-items: center;\n                    }\n\n                    img {\n                      width: 65%;\n                      height: 100%;\n                      object-fit: contain;\n                      margin: auto;\n                    }\n\n                }\n\n            }\n          \n        }\n        \n        &:not(.animate_scroll) {\n          \n            ul {\n              list-style: none;\n              position: relative;\n              display: flex;\n              flex-wrap: wrap;\n              justify-content: center;\n\n                .logo-item {\n                  position: relative;\n                  display: block;\n                  overflow: hidden;\n                  flex-basis: 50%;\n                  max-width: 50%;\n                  margin: 0;\n\n                    @media only screen and (min-width: $sm-start) {\n                      flex-basis: 20%;\n                      max-width: 20%;\n                    }\n\n                    &::after {\n                      content: \" \";\n                      padding-bottom: 50.48%;\n                      display: block;\n                    }\n\n                    .fit {\n                      position: absolute;\n                      top: 0;\n                      left: 0;\n                      width: 100%;\n                      height: 100%;\n                      display: flex;\n                      justify-content: center;\n                      align-items: center;\n                    }\n\n                    img {\n                      width: 65%;\n                      height: 40%;\n                      object-fit: contain;\n                      margin: auto;\n                    }\n\n                }\n\n            }\n            \n        }\n        \n        &.monochrome {\n          \n          img {\n            filter: grayscale(1);\n          }\n          \n        }\n      \n    }\n    \n    .cta-wrap {\n      margin-top: $m72;\n      text-align: center;\n    }\n    \n}",".comp__media-text {\n  padding-top: $m80;\n  padding-bottom: $m80;\n  \n    .media-wrap {\n      margin-bottom: $spacer-lg;\n\n        @media only screen and (min-width: $sm-start) {\n          margin-bottom: 0;\n        }\n        \n        iframe {\n          position: absolute;\n          width: 100%;\n          height: 100%;\n          top: 0;\n          left: 0;\n        }\n        \n    }\n    \n    .eyebrow-image {\n      width: 40%;\n      max-width: 206px;\n      margin-bottom: 8px;\n      display: inline-flex;\n      align-items: center;\n      \n        @media only screen and (min-width: $md-start) {\n          width: auto;\n        }\n      \n        img {\n          max-height: 40px;\n        }\n          \n    }\n    \n    .mt-title {\n      margin-top: 0;\n      margin-bottom: $spacer-sm;\n    }\n    \n    .mt-content {\n      margin-bottom: $m48;\n      \n        @media only screen and (min-width: $sm-start) {\n          margin-bottom: 0;\n        }\n        \n        > * {\n          margin-bottom: $m32;\n        }\n        \n        p, li {\n          font-size: $b2;\n          line-height: 1.2;\n        }\n        \n        ul {\n          display: grid;\n          grid-template-columns: repeat(2, 1fr);\n          gap: $m16 $m24;\n          list-style-position: outside;\n          padding-left: 18px;\n          \n            @media only screen and (min-width: $md-start) {\n              gap: $m16 $m48;\n            }\n            \n            @media only screen and (min-width: $lg-start) {\n              max-width: 90%;\n            }\n            \n            @media only screen and (min-width: $xl-start) {\n              max-width: 80%;\n            }\n            \n        }\n        \n        &.styled {\n\n          ul li {\n            padding-left: 10px;\n            \n              &::marker {\n                content: url(\"data:image/svg+xml,%3Csvg width='18' height='13' viewBox='0 0 18 13' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M1 5.90196L6.4026 11L17 1' stroke='%2300BEFF' stroke-width='2.5'/%3E%3C/svg%3E%0A\");\n                width: 18px;\n                height: 13px;\n              }\n            \n          }\n          \n        }\n\n        &:not(.styled) {\n\n          ul li::marker {\n            font-size: $b5;\n          }\n\n        }\n        \n        :last-child {\n          margin-bottom: 0;\n        }\n      \n    }\n    \n    .mt-cta {\n      margin-top: $spacer-lg;\n    }\n  \n}",".comp_testimonials {\n  padding-top: $m80;\n  padding-bottom: $m80;\n  \n    &:not(.make-clear) {\n      margin-top: $m80;\n      margin-bottom: $m80;\n      \n        .cta-wrap a {\n          color: #fff;\n        }\n    \n    }\n    \n    .testimonial_section-title {\n      margin-bottom: $m64;\n      \n        p {\n          margin: 0;\n        }\n      \n    }\n    \n    .testimonial-primary {\n      @include imgPadHack(100%);\n      margin-bottom: $m32;\n    }\n    \n    p.h5.quote, .quote {\n      font-family: $titleFont;\n      font-weight: 400;\n    }\n    \n    .quotee {\n      \n        span {\n          display: block;\n        }\n      \n    }\n      \n    &.single {\n      \n        .testimonial_section-title {\n          margin-bottom: $m104;\n        }\n      \n        .with_primary {\n          display: flex;\n          flex-direction: column;\n          justify-content: space-between;\n          row-gap: $m32;\n          \n            @media only screen and (min-width: $sm-start) {\n              flex-direction: row;\n              column-gap: clamp(40px, 10%, 165px);\n            }\n          \n            .testimonial-images {\n              width: 40%;\n              \n                @media only screen and (min-width: $sm-start) {\n                  flex: 0 0 30%;\n                  max-width: 206px;\n                }\n              \n            }\n          \n        }\n        \n        .no_primary {\n          \n          .testimonial-logo {\n            margin-bottom: $m32;\n            max-width: 210px;\n            \n              img {\n                max-height: 31px;\n              }\n            \n          }\n          \n        }\n        \n        .quote {\n          margin-bottom: $m48;\n        }\n        \n        .cta-wrap {\n          margin-top: $m32;\n        }\n      \n    }\n    \n    &.double, &.triple {\n      \n        .testimonial-wrap > .row {\n          row-gap: $m72;\n        }\n        \n        .testimonial-images {\n          width: 40%;\n          max-width: 210px;\n          margin-bottom: $m40;\n          \n            @media only screen and (min-width: $md-start) {\n              width: auto;\n            }\n          \n            .testimonial-logo img {\n              max-height: 31px;\n            }\n          \n        }\n      \n        .testimonial-content {\n          display: flex;\n          flex-direction: column;\n          justify-content: space-between;\n        }\n      \n        .quote {\n          margin-bottom: $m40;\n        }\n        \n        .cta-wrap {\n          margin-top: $m32;\n        }\n      \n    }\n    \n    .section-cta-wrap {\n      margin-top: $m80;\n      \n        a.btn {\n          color: $deepSeaShade1;\n          font-weight: 700;\n          \n            @media (hover: hover) and (pointer: fine) {\n              &:hover {\n                color: #fff;\n              }\n            }\n          \n        }\n      \n    }\n  \n}","@mixin white-gradient {\n\tbackground: linear-gradient(to right,  rgba(255,255,255,1) 0%,rgba(255,255,255,0) 100%);\n}\n\n$animationSpeed: 40s;\n$height: 100px;\n$width: 136px;\n\n// Animation\n@keyframes scroll {\n\t0% { transform: translateX(0); }\n\t100% { transform: translateX(calc(-136px * 7))}\n}\n\n\n// Styling\n.mc-slider {\n\tbackground: white;\n\theight: 136px;\n\tmargin: auto;\n\toverflow:hidden;\n\tposition: relative;\n\twidth: 1200px;\n\t\n\t&::before,\n\t&::after {\n\t\t@include white-gradient;\n\t\tcontent: \"\";\n\t\theight: $height;\n\t\tposition: absolute;\n\t\twidth: 200px;\n\t\tz-index: 2;\n\t}\n\t\n\t&::after {\n\t\tright: 0;\n\t\ttop: 0;\n\t\ttransform: rotateZ(180deg);\n\t}\n\n\t&::before {\n\t\tleft: 0;\n\t\ttop: 0;\n\t}\n\t\n\t.mc-slide-track {\n\t\tanimation: scroll $animationSpeed linear infinite;\n\t\tdisplay: flex;\n\t\twidth: calc($width * 14);\n\t}\n\t\n\t.mc-slide {\n\t\theight: $height;\n    width: $width;\n    img {\n      height: $height;\n      width: auto;\n    }\n\t}\n}\n"],"names":[],"sourceRoot":""}